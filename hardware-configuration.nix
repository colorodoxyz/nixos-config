# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  boot.supportedFilesystems = ["ntfs"];

  # Bootloader
  boot.loader = {
    efi = {
      canTouchEfiVariables = true;
      efiSysMountPoint = "/boot/efi";
    };
    grub = {
      enable = true;
      device = "nodev";
      useOSProber = true;
      efiSupport = true;
    };
  };

  boot.kernelParams = [ "video=efifb:off,vesafb:off" "gfxpayload=text" ];

  swapDevices = [];
  #{device = "/persist/home/colorodo/swapfile";
    #size = 32*1024;} ];


  users.groups.workspace.gid = 629;

  fileSystems."/" =
    {
      device = "stateless/rootfs";
      fsType = "zfs";
    };

  fileSystems."/nix" =
    {
      device = "stateless/nix";
      fsType = "zfs";
    };

  fileSystems."/persist" =
    { device = "stateless/persist";
      fsType = "zfs";
      neededForBoot = true;
    };

  fileSystems."/workspace" =
    {
      device = "stateless/workspace";
      fsType = "zfs";
      neededForBoot = true;
      options = [ "gid=629" ];
    };

  fileSystems."/boot" =
    {
      device = "stateless/boot";
      fsType = "zfs";
      neededForBoot = true;
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/10F6-4E60";
      fsType = "vfat";
    };

  boot.initrd.postDeviceCommands = ''
      zpool import -Nf stateless
      zfs rollback -r stateless/rootfs@empty
      zpool export -a
    '';

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.keyboard.qmk.enable = true;
}
